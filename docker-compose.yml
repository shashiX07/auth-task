version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cgs-backend
    ports:
      - "${PORT:-5000}:5000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-shashi}
      - DB_HOST=db  # Use service name as host
      - DB_PORT=${DB_PORT:-5432}
      - DB_NAME=${DB_NAME:-cgs_db}
      - PORT=${PORT:-5000}
      - JWT_SECRET=${JWT_SECRET:-shashi}
      - JWT_EXPIRATION=${JWT_EXPIRATION:-1h}
    networks:
      - cgs-network
    volumes:
      - ./backend:/app
      - /app/node_modules
    restart: unless-stopped

  db:
    image: postgres:15
    container_name: cgs-db
    environment:
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-shashi}
      - POSTGRES_DB=${DB_NAME:-cgs_db}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - cgs-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

networks:
  cgs-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local